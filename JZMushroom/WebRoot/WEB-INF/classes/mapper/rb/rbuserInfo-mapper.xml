<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jz.crm.mappers.rb.RbuserInfoMapper">
	<!--
		WARNING - @mbggenerated
		This element is automatically generated by Zqgame Generator, do not modify.
		This element was generated on 2017-01-03 15:52:30.
	-->
	<resultMap id="BaseResultMap" type="com.jz.crm.models.rb.RbuserInfo">
		<result column="as_rb_user_info_id" property="id" jdbcType="BIGINT" />
		<result column="as_rb_user_info_open_id" property="openId" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_user_name" property="userName" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_password" property="password" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_email" property="email" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_mobile_adress" property="mobileAdress" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_present_company" property="presentCompany" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_fuction_dep" property="fuctionDep" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_position" property="position" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_headimgurl" property="headimgurl" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_has_reg" property="hasReg" jdbcType="INTEGER" />
		<result column="as_rb_user_info_receive_red_book" property="receiveRedBook" jdbcType="INTEGER" />
		<result column="as_rb_user_info_source" property="source" jdbcType="INTEGER" />
		<result column="as_rb_user_info_create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="as_rb_user_info_update_by" property="updateBy" jdbcType="VARCHAR" />
		<result column="as_rb_user_info_update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<select id="getDataPageBy" resultMap="BaseResultMap" parameterType="java.util.HashMap">
			SELECT
			<include refid="Base_Column_List" />
			FROM  rb_user_info as_rb_user_info  ${where} ${order}
	</select>
	<select id="getDataBy" resultMap="BaseResultMap" parameterType="java.util.HashMap">
			SELECT
			<include refid="Base_Column_List" />
			FROM  rb_user_info as_rb_user_info  ${where} ${order} ${limit} ${for_update}
	</select>
	<select id="getTotalCountBy" parameterType="java.util.HashMap" resultType="java.lang.Long">
		SELECT COUNT(*) FROM  rb_user_info as_rb_user_info  ${where}
	</select>
	<select id="getSumBy" parameterType="java.util.HashMap" resultType="java.lang.Double">
		SELECT SUM(${sumField}) FROM  rb_user_info as_rb_user_info  ${where}
	</select>
	<select id="getById" resultMap="BaseResultMap" parameterType="java.util.HashMap">
			SELECT
			<include refid="Base_Column_List" />
			FROM  rb_user_info as_rb_user_info 
			WHERE as_rb_user_info.id = #{key_value,jdbcType=BIGINT} ${for_update}
	</select>
	<select id="getByIds" resultMap="BaseResultMap" parameterType="java.util.HashMap">
			SELECT
			<include refid="Base_Column_List" />
			FROM  rb_user_info as_rb_user_info  WHERE
			as_rb_user_info.id IN
			<foreach collection="list" item="ids" open="(" separator="," close=")">
				#{ids,jdbcType=BIGINT} 
			</foreach>
			${for_update}
	</select>
	<insert id="insert" parameterType="com.jz.crm.models.rb.RbuserInfo"  useGeneratedKeys="true" keyProperty="id">
			<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
				SELECT LAST_INSERT_ID()
			</selectKey>
			INSERT INTO rb_user_info
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="id != null">
					`id`,
				</if>
				<if test="openId != null">
					`open_id`,
				</if>
				<if test="userName != null">
					`user_name`,
				</if>
				<if test="password != null">
					`password`,
				</if>
				<if test="email != null">
					`email`,
				</if>
				<if test="mobile != null">
					`mobile`,
				</if>
				<if test="mobileAdress != null">
					`mobile_adress`,
				</if>
				<if test="presentCompany != null">
					`present_company`,
				</if>
				<if test="fuctionDep != null">
					`fuction_dep`,
				</if>
				<if test="position != null">
					`position`,
				</if>
				<if test="headimgurl != null">
					`headimgurl`,
				</if>
				<if test="hasReg != null">
					`has_reg`,
				</if>
				<if test="receiveRedBook != null">
					`receive_red_book`,
				</if>
				<if test="source != null">
					`source`,
				</if>
				<if test="createBy != null">
					`create_by`,
				</if>
				<if test="createTime != null">
					`create_time`,
				</if>
				<if test="updateBy != null">
					`update_by`,
				</if>
				<if test="updateTime != null">
					`update_time`,
				</if>
			</trim>
			<trim prefix="values (" suffix=")" suffixOverrides=",">
				<if test="id != null">
					#{id,jdbcType=BIGINT},
				</if>
				<if test="openId != null">
					#{openId,jdbcType=VARCHAR},
				</if>
				<if test="userName != null">
					#{userName,jdbcType=VARCHAR},
				</if>
				<if test="password != null">
					#{password,jdbcType=VARCHAR},
				</if>
				<if test="email != null">
					#{email,jdbcType=VARCHAR},
				</if>
				<if test="mobile != null">
					#{mobile,jdbcType=VARCHAR},
				</if>
				<if test="mobileAdress != null">
					#{mobileAdress,jdbcType=VARCHAR},
				</if>
				<if test="presentCompany != null">
					#{presentCompany,jdbcType=VARCHAR},
				</if>
				<if test="fuctionDep != null">
					#{fuctionDep,jdbcType=VARCHAR},
				</if>
				<if test="position != null">
					#{position,jdbcType=VARCHAR},
				</if>
				<if test="headimgurl != null">
					#{headimgurl,jdbcType=VARCHAR},
				</if>
				<if test="hasReg != null">
					#{hasReg,jdbcType=INTEGER},
				</if>
				<if test="receiveRedBook != null">
					#{receiveRedBook,jdbcType=INTEGER},
				</if>
				<if test="source != null">
					#{source,jdbcType=INTEGER},
				</if>
				<if test="createBy != null">
					#{createBy,jdbcType=VARCHAR},
				</if>
				<if test="createTime != null">
					#{createTime,jdbcType=TIMESTAMP},
				</if>
				<if test="updateBy != null">
					#{updateBy,jdbcType=VARCHAR},
				</if>
				<if test="updateTime != null">
					#{updateTime,jdbcType=TIMESTAMP},
				</if>
			</trim>
	</insert>
	<update id="update" parameterType="com.jz.crm.models.rb.RbuserInfo">
			UPDATE  rb_user_info as_rb_user_info 
			<set>
			<trim suffixOverrides=",">
				<if test="id != null">
					as_rb_user_info.id=#{id,jdbcType=BIGINT},
				</if>
				<if test="openId != null">
					as_rb_user_info.open_id=#{openId,jdbcType=VARCHAR},
				</if>
				<if test="userName != null">
					as_rb_user_info.user_name=#{userName,jdbcType=VARCHAR},
				</if>
				<if test="password != null">
					as_rb_user_info.password=#{password,jdbcType=VARCHAR},
				</if>
				<if test="email != null">
					as_rb_user_info.email=#{email,jdbcType=VARCHAR},
				</if>
				<if test="mobile != null">
					as_rb_user_info.mobile=#{mobile,jdbcType=VARCHAR},
				</if>
				<if test="mobileAdress != null">
					as_rb_user_info.mobile_adress=#{mobileAdress,jdbcType=VARCHAR},
				</if>
				<if test="presentCompany != null">
					as_rb_user_info.present_company=#{presentCompany,jdbcType=VARCHAR},
				</if>
				<if test="fuctionDep != null">
					as_rb_user_info.fuction_dep=#{fuctionDep,jdbcType=VARCHAR},
				</if>
				<if test="position != null">
					as_rb_user_info.position=#{position,jdbcType=VARCHAR},
				</if>
				<if test="headimgurl != null">
					as_rb_user_info.headimgurl=#{headimgurl,jdbcType=VARCHAR},
				</if>
				<if test="hasReg != null">
					as_rb_user_info.has_reg=#{hasReg,jdbcType=INTEGER},
				</if>
				<if test="receiveRedBook != null">
					as_rb_user_info.receive_red_book=#{receiveRedBook,jdbcType=INTEGER},
				</if>
				<if test="source != null">
					as_rb_user_info.source=#{source,jdbcType=INTEGER},
				</if>
				<if test="createBy != null">
					as_rb_user_info.create_by=#{createBy,jdbcType=VARCHAR},
				</if>
				<if test="createTime != null">
					as_rb_user_info.create_time=#{createTime,jdbcType=TIMESTAMP},
				</if>
				<if test="updateBy != null">
					as_rb_user_info.update_by=#{updateBy,jdbcType=VARCHAR},
				</if>
				<if test="updateTime != null">
					as_rb_user_info.update_time=#{updateTime,jdbcType=TIMESTAMP},
				</if>
			</trim>
		</set>
			WHERE as_rb_user_info.id=#{id,jdbcType=BIGINT}
	</update>
	<update id="updateBy" parameterType="java.util.HashMap">
			UPDATE  rb_user_info as_rb_user_info 
			<set>
			<trim suffixOverrides=",">
				<if test="id != null">
					as_rb_user_info.id=#{entity.id,jdbcType=BIGINT},
				</if>
				<if test="openId != null">
					as_rb_user_info.open_id=#{entity.openId,jdbcType=VARCHAR},
				</if>
				<if test="userName != null">
					as_rb_user_info.user_name=#{entity.userName,jdbcType=VARCHAR},
				</if>
				<if test="password != null">
					as_rb_user_info.password=#{entity.password,jdbcType=VARCHAR},
				</if>
				<if test="email != null">
					as_rb_user_info.email=#{entity.email,jdbcType=VARCHAR},
				</if>
				<if test="mobile != null">
					as_rb_user_info.mobile=#{entity.mobile,jdbcType=VARCHAR},
				</if>
				<if test="mobileAdress != null">
					as_rb_user_info.mobile_adress=#{entity.mobileAdress,jdbcType=VARCHAR},
				</if>
				<if test="presentCompany != null">
					as_rb_user_info.present_company=#{entity.presentCompany,jdbcType=VARCHAR},
				</if>
				<if test="fuctionDep != null">
					as_rb_user_info.fuction_dep=#{entity.fuctionDep,jdbcType=VARCHAR},
				</if>
				<if test="position != null">
					as_rb_user_info.position=#{entity.position,jdbcType=VARCHAR},
				</if>
				<if test="headimgurl != null">
					as_rb_user_info.headimgurl=#{entity.headimgurl,jdbcType=VARCHAR},
				</if>
				<if test="hasReg != null">
					as_rb_user_info.has_reg=#{entity.hasReg,jdbcType=INTEGER},
				</if>
				<if test="receiveRedBook != null">
					as_rb_user_info.receive_red_book=#{entity.receiveRedBook,jdbcType=INTEGER},
				</if>
				<if test="source != null">
					as_rb_user_info.source=#{entity.source,jdbcType=INTEGER},
				</if>
				<if test="createBy != null">
					as_rb_user_info.create_by=#{entity.createBy,jdbcType=VARCHAR},
				</if>
				<if test="createTime != null">
					as_rb_user_info.create_time=#{entity.createTime,jdbcType=TIMESTAMP},
				</if>
				<if test="updateBy != null">
					as_rb_user_info.update_by=#{entity.updateBy,jdbcType=VARCHAR},
				</if>
				<if test="updateTime != null">
					as_rb_user_info.update_time=#{entity.updateTime,jdbcType=TIMESTAMP},
				</if>
			</trim>
		</set>
			${where}
	</update>
	<delete id="delete" parameterType="java.lang.String">
			DELETE as_rb_user_info FROM rb_user_info as_rb_user_info WHERE as_rb_user_info.id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByIds" parameterType="java.util.List">
			DELETE as_rb_user_info FROM rb_user_info as_rb_user_info where as_rb_user_info.id IN
			<foreach collection="list" item="item" open="(" separator="," close=")">
				#{item,jdbcType=BIGINT}
			</foreach>
	</delete>
	<delete id="deleteBy" parameterType="java.util.HashMap">
			DELETE as_rb_user_info FROM rb_user_info as_rb_user_info ${where}
	</delete>
	<sql id="Base_Column_List">
			as_rb_user_info.id as as_rb_user_info_id,
			as_rb_user_info.open_id as as_rb_user_info_open_id,
			as_rb_user_info.user_name as as_rb_user_info_user_name,
			as_rb_user_info.password as as_rb_user_info_password,
			as_rb_user_info.email as as_rb_user_info_email,
			as_rb_user_info.mobile as as_rb_user_info_mobile,
			as_rb_user_info.mobile_adress as as_rb_user_info_mobile_adress,
			as_rb_user_info.present_company as as_rb_user_info_present_company,
			as_rb_user_info.fuction_dep as as_rb_user_info_fuction_dep,
			as_rb_user_info.position as as_rb_user_info_position,
			as_rb_user_info.headimgurl as as_rb_user_info_headimgurl,
			as_rb_user_info.has_reg as as_rb_user_info_has_reg,
			as_rb_user_info.receive_red_book as as_rb_user_info_receive_red_book,
			as_rb_user_info.source as as_rb_user_info_source,
			as_rb_user_info.create_by as as_rb_user_info_create_by,
			as_rb_user_info.create_time as as_rb_user_info_create_time,
			as_rb_user_info.update_by as as_rb_user_info_update_by,
			as_rb_user_info.update_time as as_rb_user_info_update_time
	</sql>

</mapper>